FROM yi/tflow-gui:1.12
 
MAINTAINER Igor Rabkin <igor.rabkin@xiaoyi.com>


#################################################
#     Python 3.6 installations for dev          #
#################################################

RUN add-apt-repository ppa:jonathonf/python-3.6 && \
    apt-get update && apt-get install -y --no-install-recommends \
    python3.6 \
    python3.6-dev \
    python3.6-venv \
    && \ 
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
	
RUN ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \
    ln -s /usr/local/bin/pip /usr/local/bin/pip3 && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python
    
RUN curl -fSsL -O ftp://jenkins-cloud/pub/Develop/get-pip.py && \
    python3.6 get-pip.py && \
    rm get-pip.py 

##################################################################
#                     Possible TensorRT Support                  #
##################################################################

RUN apt-get update && \
    apt-get install nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \
    apt-get update && \
    apt-get install libnvinfer4=4.1.2-1+cuda9.0 && \
    apt-get install libnvinfer-dev=4.1.2-1+cuda9.0
    # ENV TF_NEED_TENSORRT 1
	
	
################################################################## 
#              Pick up some TF dependencies                      #
##################################################################

RUN apt-get update && apt-get install -y --no-install-recommends \ 		 
    libfreetype6-dev \
    libpng12-dev \ 
    libzmq3-dev \
    libcurl3-dev \
    libgoogle-perftools-dev \		 
    pkg-config \
    cpio \
    sudo \
    python3-tk && \    
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*  
 
 
RUN python3.6 -m pip --no-cache-dir install \ 
    Pillow \
    toposort \
    networkx \
    pytest \
    ipykernel \
    jupyter \
    matplotlib \
    numpy \
    pandas \
    scipy \
    sklearn \
    tensorlayer \
    scikit-learn \
    tqdm \
    click==6.7 \
    more_itertools \
    utils \
    bs4 \
    python3-utils \
    scikit-image \
    xmltodict \
    easydict \
    tflearn \
    pymongo \
    sacred \
    tables \
    keras-applications \
    keras-preprocessing \
    glances \
    gpustat \
    urllib3==1.21.1 && \
    python3.6 -m ipykernel.kernelspec && \
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    
    
################################################################## 
#              Installing XIAOYI Packages                        #
##################################################################

RUN python3.6 -m pip --no-cache-dir install --index-url http://192.168.1.102:8888 xiaoyi --trusted-host 192.168.1.102 --upgrade &&\
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    

#################################################
#     Install HDF5 with multithread support     #
#################################################

RUN curl -OSL https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.20/src/hdf5-1.8.20.tar && \
    tar -xvf hdf5-1.8.20.tar && \
    cd hdf5-1.8.20 && \
    ./configure --enable-threadsafe  --enable-unsupported --prefix /usr/local && \
    nc=`nproc` && \
    make -j$nc && \
    make install && \
    cd .. && \
    rm hdf5-1.8.20.tar && rm -rf hdf5-1.8.20.tar && \
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    
    ENV HDF5_DIR=/usr/local 
    RUN python3.6 -m pip --no-cache-dir install --no-binary=h5py h5py
    
   
###################################
# Install TensorFlow GPU version. #
###################################

RUN cd /
ARG FTP_PATH
ARG FILE_NAME
RUN curl -OSL ${FTP_PATH} -o ${FILE_NAME} && \
    pip --no-cache-dir install --upgrade ${FILE_NAME} && \
    rm -f ${FILE_NAME}  
    
    
##################################################
#                Installing OpenVINO             #
##################################################

ARG VER=l_openvino_toolkit_p_2019.1.144.tgz
RUN cd /tmp && \
    curl -OSL tp://jenkins-cloud/pub/Tflow-VNC-Soft/OpenVINO/${VER} -o ${VER} && \
    pv -f ${VER} | tar xpzf - -C $PWD && \
    cd l_openvino_toolkit_p_2019.1.144 && \
    sed -i 's/decline/accept/g' silent.cfg && \
    ./install.sh -s silent.cfg --ignore-signature && \
    cd /opt/intel/openvino/install_dependencies && \
    ./install_openvino_dependencies.sh
    /bin/bash -c "source /opt/intel/openvino/bin/setupvars.sh" && \
    pv -f source /opt/intel/openvino/bin/setupvars.sh > /tmp/setupvars.sh && \
    chmod o+x /tmp/setupvars.sh && \
    ################### Instlling Tensorflow Support #########################
    cd /opt/intel/openvino/deployment_tools/model_optimizer/install_prerequisites && \
    ./install_prerequisites_tf.sh && \
    cd /tmp && \
    rm -rf l_openvino_toolkit_p_2019.1.144* && \
    cd /opt/intel/openvino_2019.1.144/python/python3.6/openvino/inference_engine && \
    sed -i '/IENetReader/d' __init__.py && \
    sed -i '$ a __all__ = ["IENetwork", "IEPlugin"] #, "IENetReader"]' __init__.py && \
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    
      
##################################################
# Configure the build for our CUDA configuration #
##################################################

ENV CI_BUILD_PYTHON python
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
ENV TF_NEED_CUDA 1
ENV TF_CUDA_COMPUTE_CAPABILITIES=5.2,6.1
ENV TF_CUDA_VERSION=9.0
ENV TF_CUDNN_VERSION=7
ENV TF_NCCL_VERSION=2.2

################ INTEL MKL SUPPORT #################

ENV LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
RUN cd /usr/local/lib && \
    curl -OSL ftp://jenkins-cloud/pub/LIB/libiomp5.so -o libiomp5.so && \
    curl -OSL ftp://jenkins-cloud/pub/LIB/libmklml_gnu.so -o libmklml_gnu.so && \
    curl -OSL ftp://jenkins-cloud/pub/LIB/libmklml_intel.so -o libmklml_intel.so
    
####################################################
